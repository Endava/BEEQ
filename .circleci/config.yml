# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

commands:
  setup-node:
    description: Install volta & ensure consistent node & yarn versions are installed
    steps:
      - run:
          name: üõ† Setup Volta
          command: |
            curl https://get.volta.sh | bash
            echo 'export VOLTA_HOME=$HOME/.volta' >> $BASH_ENV
            echo 'export PATH=$VOLTA_HOME:$PATH' >> $BASH_ENV
      - run:
          name: ‚öôÔ∏è Install node
          command: volta install node

jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:
    # You can specify an image from Dockerhub or use one of our Convenience/Machine Images from CircleCI's Developer Hub.
    # A list of available CircleCI Docker Machine Images are available here: https://circleci.com/developer/images?imageType=machine
    machine:
      image: ubuntu-2204:2023.02.1
    # Then run your node commands!
    # CircleCI will report the results back to your VCS provider.
    steps:
      # Checkout the code as the first step.
      - checkout
      - setup-node
      - restore_cache:
          # See the configuration reference documentation for more details on using restore_cache and save_cache steps
          # https://circleci.com/docs/2.0/configuration-reference/?section=reference#save_cache
          keys:
            - node-deps-v1-{{ .Branch }}-{{checksum "package-lock.json"}}
      - run:
          name: üì¶ Install dependencies
          command: npm ci
      - save_cache:
          key: node-deps-v1-{{ .Branch }}-{{checksum "package-lock.json"}}
          paths:
            - ~/.npm
      - run:
          name: ü©∫ Run Linters and Unit Tests
          command: npx nx affected --target=test --exclude=workspace --output-style=stream-without-prefixes -- --ci --code-coverage --runInBand
      - run:
          name: ‚è≥ Build
          command: npm run build
      - run:
          name: üß™ Run E2E Tests (only affected)
          command: npx nx affected --target=e2e --exclude=workspace --output-style=stream-without-prefixes -- --ci --code-coverage --runInBand

workflows:
  sample:
    jobs:
      - build-and-test
