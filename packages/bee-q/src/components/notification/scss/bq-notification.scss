/* -------------------------------------------------------------------------- */
/*                                Notification styles                */
/* -------------------------------------------------------------------------- */

@import './bq-notification.variables';

:host {
  @apply hidden;
}

:host([is-open]) {
  @apply block;
}

.bq-notification {
  @apply relative flex  min-w-[var(--bq-notification--min-width)] p-[var(--bq-notification--padding)];
  @apply rounded-[var(--bq-notification--border-radius)] bg-[var(--bq-notification--background)];

  box-shadow: var(--bq-notification--box-shadow);
}

/**
 * Set the nocitication icon color based on the type value selected
 */
.notification--icon.color {
  &-error {
    @apply text-[color:--bq-notification--icon-color-error];
  }

  &-info {
    @apply text-[color:--bq-notification--icon-color-info];
  }

  &-neutral {
    @apply text-[color:--bq-notification--icon-color-neutral];
  }

  &-success {
    @apply text-[color:--bq-notification--icon-color-success];
  }

  &-warning {
    @apply text-[color:--bq-notification--icon-color-warning];
  }
}

/**
 * Tweak the close bq-buton styles so it remain small wihout extra padding
 */
.notification--close::part(button) {
  @apply h-fit rounded-s border-0 p-0;
}

/**
 * Here we guarantee that if the footer actions are wrapped in a div container from the consumer side,
 * the styles get applied to the that wrapping container directly
 */
[part='footer'] ::slotted(*) {
  @apply flex items-start gap-xs;
}

[part='body'],
[part='footer'] {
  ::slotted(*) {
    @apply mt-m block;
  }
}
