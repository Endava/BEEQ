/* -------------------------------------------------------------------------- */
/*                             Notification styles                            */
/* -------------------------------------------------------------------------- */

@import './bq-notification.variables';

:host {
  @apply block;
}

:host(.is-hidden) {
  @apply hidden;
}

.bq-notification {
  @apply relative flex transition-all min-is-[--bq-notification--min-width] p-b-[--bq-notification--padding] p-i-[--bq-notification--padding];
  @apply rounded-[--bq-notification--border-radius] bg-[--bq-notification--background] shadow-[shadow:--bq-notification--box-shadow];
}

/**
 * Set the notification icon color based on the type value selected
 */
.notification--icon.color {
  &-error {
    @apply text-[color:--bq-notification--icon-color-error];
  }

  &-info {
    @apply text-[color:--bq-notification--icon-color-info];
  }

  &-neutral {
    @apply text-[color:--bq-notification--icon-color-neutral];
  }

  &-success {
    @apply text-[color:--bq-notification--icon-color-success];
  }

  &-warning {
    @apply text-[color:--bq-notification--icon-color-warning];
  }
}

/**
 * Tweak the close bq-button styles so it remain small without extra padding
 */
.notification--close::part(button) {
  @apply rounded-s border-0 bs-fit p-b-0 p-i-0;
}

/**
 * Here we guarantee that if the footer actions are wrapped in a div container from the consumer side,
 * the styles get applied to the that wrapping container directly
 */
[part='footer'] ::slotted(*) {
  @apply flex items-start gap-xs;
}

[part='body'],
[part='footer'] {
  ::slotted(*) {
    @apply block m-bs-m;
  }
}
